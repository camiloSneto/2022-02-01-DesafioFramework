● uso de boas práticas de programação 
● legibilidade do código 
● presença e qualidade de testes unitários 
● versionamento do código 
● capacidade de identificar e prever problemas 
● lógica implementada

Recomendamos que use linguagem C# para desenvolvimento deste Desafio. A interface usada pode ser Console (linha de comando), Form do Windows ou React e a sua entrega do desafio será feita através de um link pelo Github ou se preferir, pode ser pelo zip.fonte também.


Technical Challenge 
1. Um cliente precisa de um sistema que seja capaz de decompor um número em todos os seus divisores, enumerando também aqueles que forem primos. 
Obs.: Não é permitido o uso de bibliotecas prontas, se houver, que façam a decomposição. 
● Dado um número de entrada, o programa deve calcular todos os divisores que compõem o número. 
● Dado um número de entrada, o programa deve calcular todos os divisores primos que compõem o número. 
Exemplo de Console: 
Digite um número: 45 

Após o usuário digitar o número, Console pode mostrar: 
Número de Entrada: 45 
Números divisores: 1 3 5 9 15 45 
Divisores Primos: 1 3 5

2. Já temos nossa funcionalidade principal. Contudo, você acaba de descobrir que essa funcionalidade vai ser usada em outros sistemas e, por isso, é necessário que seja disponibilizada um serviço que forneça as informações. Fique atento a: 

● Performance 
● Escalabilidade 
● Disponibilidade 
● Resiliência 
● Robustez


criar uma classe math 
criar dois metodos: 
	decompor (tds os seus divisores)
	primos (tds os divisores primos)

encapsular isso em uma library core.

criar um console 
e chamar no console a library 
criar uma camada façade para receber essa classe

criar uma webapi 
chamar library core
criar dois métodos para implementar 
